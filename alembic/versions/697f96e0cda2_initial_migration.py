"""Initial migration

Revision ID: 697f96e0cda2
Revises: 
Create Date: 2024-11-29 16:50:20.100478

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '697f96e0cda2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scope')
    op.drop_table('client_role')
    op.drop_table('role_permission')
    op.drop_table('permission_object')
    op.drop_table('role')
    op.drop_table('user_role')
    op.drop_table('permission_scope')
    op.drop_table('permission')
    op.drop_table('permission_action')
    op.drop_table('client')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('secret', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('redirect_uri', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('login_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='client_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('permission_action',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='permission_action_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('permission',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('object_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('action_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['action_id'], ['permission_action.id'], name='permission_action_id_fkey'),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name='permission_client_id_fkey'),
    sa.ForeignKeyConstraint(['object_id'], ['permission_object.id'], name='permission_object_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='permission_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('permission_scope',
    sa.Column('permission_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('scope_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name='permission_scope_permission_id_fkey'),
    sa.ForeignKeyConstraint(['scope_id'], ['scope.id'], name='permission_scope_scope_id_fkey'),
    sa.PrimaryKeyConstraint('permission_id', 'scope_id', name='permission_scope_pkey')
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='user_role_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_role_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='user_role_pkey')
    )
    op.create_table('role',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name='role_client_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='role_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('permission_object',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='permission_object_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name='role_permission_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='role_permission_role_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permission_pkey')
    )
    op.create_table('client_role',
    sa.Column('client_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name='client_role_client_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='client_role_role_id_fkey'),
    sa.PrimaryKeyConstraint('client_id', 'role_id', name='client_role_pkey')
    )
    op.create_table('scope',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='scope_pkey')
    )
    # ### end Alembic commands ###
